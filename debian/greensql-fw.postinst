#!/bin/sh

set -e

# Source debconf library.
test -e /usr/share/debconf/confmodule && {
  . /usr/share/debconf/confmodule
  db_version 2.0
}

# Read the settings supplied by debconf.
get_config() {
  CONF='/etc/greensql/greensql.conf'

  # * The port information could be encoded in the host configuration setting,
  #   by using host:port as the syntax.
  # * localhost => socket, 127.0.0.1 => TCP/IP
  #   This is the default MySQL behaviour, but many people aren't used
  #   to it. So this has to be documented somewhere.
  db_get greensql/mysql_server
  MYSQL_HOST="$RET"
  #if [ "$RET" = Cancel ]; then
  #  exit
  #fi

  db_get greensql/setup
  if [ "x$RET" = "xtrue" ]; then SETUP=1; else SETUP=0; fi
  if [ $SETUP -ne 0 ]
  then
    db_get greensql/mysql_root_user
    MYSQL_ROOT_USER="$RET"
    db_get greensql/mysql_root_passwd
    MYSQL_ROOT_PASSWD="$RET"
  fi

  db_get greensql/database
  DATABASE="$RET"
  db_get greensql/mysql_user
  MYSQL_USER="$RET"
  db_get greensql/mysql_passwd
  MYSQL_PASSWD="$RET"

  db_stop

  # Create a custom temporary MySQL configuration file for the root user.
  if [ $SETUP -ne 0 ]
  then
    MY_CNF=`mktemp /tmp/greensql.my-cnf.XXXXXXXXXX`
    chmod 0600 $MY_CNF

    # Split MYSQL_HOST for the host:port pair, give an empty string for the
    # port if it isn't specified, save it into MYSQL_PORT otherwise.
    mysql_h="`echo $MYSQL_HOST|cut -d: -f1`"
    mysql_p="`echo $MYSQL_HOST|cut -d: -f2`"
    if [ "$mysql_h" != "$mysql_p" -a "x$mysql_p" != "x" ]; then
      MYSQL_HOSTNAME="$mysql_h"
      MYSQL_PORT="$mysql_p"
    else
      MYSQL_HOSTNAME="$MYSQL_HOST"
      MYSQL_PORT=""
    fi
    
    echo "[client]
          host=${MYSQL_HOST}
          port=${MYSQL_PORT}
          user=${MYSQL_ROOT_USER}" > $MY_CNF
    if [ "${MYSQL_ROOT_PASSWD}" != "none" ]; then
      echo "password=${MYSQL_ROOT_PASSWD}" >> $MY_CNF
    fi
    MRO="--defaults-file=$MY_CNF"
    MUO="${MRO} -u${MYSQL_USER} -p${MYSQL_PASSWD}"
  fi
}

cleanup() {
  #echo "cleanup"
  if [ -n $MY_CNF ]; then rm -rf $MY_CNF; fi
}

create_db() {
  # If we aren't responsible for the proper setup, just ignore this part.
  if [ $SETUP -ne 0 ]
  then
    DBSETUP="0"
    if mysql $MRO -BNe 'show databases' | grep -q "$DATABASE"; then
      echo "Database already exists, doing nothing."
    else
      DBSETUP="1"
      echo "Creating database..."
      mysqladmin $MRO -f create $DATABASE > /dev/null
      echo "Adding user..."

      if [ "$MYSQL_HOSTNAME" = "localhost" -o "$MYSQL_HOSTNAME" = "127.0.0.1" ]
      then
        mysql $MRO $DATABASE -f -e \
          "GRANT ALL ON $DATABASE.* TO '${MYSQL_USER}'@'localhost'
           IDENTIFIED BY '${MYSQL_PASSWD}'" > /dev/null
      else
        mysql $MRO $DATABASE -f -e "GRANT ALL ON $DATABASE.* TO ${MYSQL_USER}@'%' IDENTIFIED BY '${MYSQL_PASSWD}'" > /dev/null
      fi
    fi
  fi
}

create_tbls() {
  # If we shouldn't create & upgrade the tables, we'll ignore this.
  if [ $SETUP -ne 0 ]
  then
    # Execute the create SQL code only if the database was newly created.
    if [ $DBSETUP -ne 0 ]
    then
      echo "Creating tables..."
      /bin/cat /usr/share/doc/greensql-fw/greensql-mysql-db.txt | \
        mysql $MUO -f $DATABASE > /dev/null
    fi
    
  fi
}

setup_mysql() {
  create_db
  create_tbls
}

# This function dumps an actual version of the configuration into the file
# specified in $CONF. 
create_cfgfile() {
  if test -f $CONF
  then
    cp -a $CONF ${CONF}.dpkg-old
  else
    cp /usr/share/doc/greensql-fw/greensql.conf $CONF
  fi

start_cfg=`perl -p0777 -e 's/\[database\].*$//s' $CONF`
end_cfg=`perl -p0777 -e 's/^.*\[database\][^\[]*\[/\[/s' $CONF`

  echo "## AUTOMATICALLY GENERATED BY DEBCONF. DO NOT MODIFY DATABASE
## SECTION (db*)... PLEASE RUN 'dpkg-reconfigure greensql-fw' INSTEAD.
##
$start_cfg

[database]
dbhost=$MYSQL_HOST
dbname=$DATABASE
dbuser=$MYSQL_USER
dbpass=$MYSQL_PASSWD" > $CONF

  if [ "$MYSQL_PORT" != "" ] && [ "$MYSQL_PORT" != "3306" ]; then
    echo "dbport=${MYSQL_PORT}" >> $CONF
  else
    echo "# dbport=3306" >> $CONF
  fi

echo "
$end_cfg" >> $CONF
  echo "${CONF} created/modified. See greensql.conf(5) for details."
  echo "A backup of the old config file is at ${CONF}.dpkg-old. "
  echo "Values were preserved, except for database settings."
}

create_user() {
  groupadd -f greensql
  if ! /usr/bin/id greensql > /dev/null 2>&1 ; then
    useradd -g greensql -s /dev/null greensql
  fi
}

change_perms() {
  chown greensql:greensql /var/log/greensql.log
  #chmod 0600 /var/log/greensql.log
  chown greensql:greensql -R /etc/greensql
  chmod 0600 $CONF
}

case "$1" in
  configure)
    create_user
    get_config
    create_cfgfile
    setup_mysql
    change_perms
  ;;
  upgrade|abort-upgrade|abort-remove|abort-deconfigure)
  ;;
  *)
    echo "postinst called with unknown argument \`$1'" >&2
  ;;
esac

cleanup

#DEBHELPER#

# vim:set et ts=2:
